plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {

    mavenCentral()
}


dependencies {


    //init
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.security:spring-security-taglibs' // jstl sec tag 사용하기 위함


    //embed Tomcat Starter
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    //Database
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
    implementation 'org.mybatis:mybatis:3.5.3' // sql Mapper 라이브러리
    implementation 'org.mybatis:mybatis-spring:2.0.3' // 스프링과 Mybatis를 연결
    implementation 'org.springframework.boot:spring-boot-starter-jdbc' // DataSource에 필요한 클래스 제공


    //etc
    compileOnly 'javax.servlet:jstl'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    implementation('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.0') // yml handlebars 사용


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }


}
test {
    useJUnitPlatform()
}
